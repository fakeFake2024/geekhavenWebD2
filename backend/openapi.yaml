openapi: '3.1.0'
info:
  title: Reselling Marketplace API
  version: 1.0.0
  description: API specification for the Reselling Marketplace
servers:
  - url: https://your-deployment.example.com
  - url: http://localhost:3000
paths:
  /IIT2024081/healthz:
    get:
      summary: Health check
      operationId: healthz
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  ts:
                    type: integer
  /logs/recent:
    get:
      summary: Recent request logs
      operationId: recentLogs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/LogEntry'
  /api/v1/auth/register:
    post:
      summary: User registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/v1/auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/v1/auth/validate:
    post:
      summary: Validate token
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/v1/products:
    get:
      summary: List products
      parameters:
        - in: query
          name: cursor
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: category
          schema:
            type: string
        - in: query
          name: min
          schema:
            type: number
        - in: query
          name: max
          schema:
            type: number
        - in: query
          name: seller
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
    post:
      summary: Create product
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /api/v1/products/{id}:
    get:
      summary: Get product by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetail'
    put:
      summary: Update product
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    delete:
      summary: Delete product
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /api/v1/products/{id}/like:
    post:
      summary: Toggle like
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /api/v1/products/{id}/bookmark:
    post:
      summary: Toggle bookmark
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /api/v1/products/{id}/promote:
    post:
      summary: Toggle promote
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /api/v1/cart:
    get:
      summary: Get cart
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
    post:
      summary: Add item to cart
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartAdd'
      responses:
        '200':
          description: OK
  /api/v1/cart/{id}:
    post:
      summary: Add or replace item quantity
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
      responses:
        '200':
          description: OK
    put:
      summary: Update item quantity
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
      responses:
        '200':
          description: OK
    delete:
      summary: Remove item from cart
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /api/v1/products/{id}/reviews:
    get:
      summary: List reviews
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    post:
      summary: Create or update own review
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [rating,comment]
              properties:
                rating:
                  type: integer
                comment:
                  type: string
      responses:
        '201':
          description: Created
  /api/v1/products/{id}/reviews/{reviewId}:
    delete:
      summary: Delete review
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: reviewId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /api/v1/checkout:
    post:
      summary: Checkout cart
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: Idempotency-Key
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                shippingAddress:
                  type: object
                  additionalProperties: true
      responses:
        '201':
          description: Created order summary
          headers:
            X-Signature:
              description: HMAC SHA256 signature of body using seed
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutResponse'
  /api/v1/user:
    get:
      summary: Get current user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/v1/user/profile:
    put:
      summary: Update profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                contactNumber:
                  type: string
                avatar:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
  /api/v1/user/liked-products:
    get:
      summary: Paginated liked products
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: cursor
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: OK
  /api/v1/user/bookmarked-products:
    get:
      summary: Paginated bookmarked products
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: cursor
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: OK
  /api/v1/orders:
    get:
      summary: List user orders
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: cursor
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: OK
  /api/v1/orders/{id}:
    get:
      summary: Get order by id
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterRequest:
      type: object
      required: [name,email,password]
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    LoginRequest:
      type: object
      required: [email,password]
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    AuthResponse:
      type: object
      properties:
        message:
          type: string
        id:
          type: string
        name:
          type: string
        email:
          type: string
        token:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        role:
          type: string
    Product:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
        category:
          type: string
        condition:
          type: string
        likesCount:
          type: integer
    ProductCreate:
      type: object
      required: [name,description,price,category,condition]
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
        category:
          type: string
        condition:
          type: string
        usedCondition:
          type: string
        images:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
              publicId:
                type: string
    ProductUpdate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
        category:
          type: string
        condition:
          type: string
        usedCondition:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductCreate/properties/images/items'
    ProductDetail:
      allOf:
        - $ref: '#/components/schemas/Product'
        - type: object
          properties:
            liked:
              type: boolean
            bookmarked:
              type: boolean
            reviews:
              type: array
              items:
                type: object
                properties:
                  user:
                    type: string
                  rating:
                    type: integer
                  comment:
                    type: string
    ProductList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ProductDetail'
        nextCursor:
          type: string
          nullable: true
    CartAdd:
      type: object
      required: [productId,quantity]
      properties:
        productId:
          type: string
        quantity:
          type: integer
    CheckoutResponse:
      type: object
      properties:
        orderId:
          type: string
        orderNumber:
          type: string
        subtotal:
          type: number
        platformFee:
          type: number
        total:
          type: number
        currency:
          type: string
        lineItems:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              price:
                type: number
              quantity:
                type: integer
              subtotal:
                type: number
    LogEntry:
      type: object
      properties:
        method:
          type: string
        path:
          type: string
        at:
          type: string
        ip:
          type: string
        q:
          type: object
        bodyKeys:
          type: array
          items:
            type: string
security:
  - bearerAuth: []
